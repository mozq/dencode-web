lang=ja
locale=ja_JP
locale.name=日本語
locale.name.default=デフォルト

oe.ext.default=Shift_JIS

default.error=処理中にエラーが発生しました。
default.error.level=fatal

data.capacity.error=入力した値が長すぎて処理できませんでした。値を短くしてください。
data.capacity.error.level=warn

network.error=接続に失敗しました。インターネット接続を確認してください。
network.error.level=warn

site.name=DenCode

all.type=全て
string.type=文字列
number.type=数値
date.type=日時
color.type=カラー
cipher.type=暗号
hash.type=ハッシュ


all.all.method=全て
all.all.title=エンコード＆デコード オンラインツール
all.all.desc=エンコード＆デコードを行えるサイトです。 HTMLエスケープ / URLエンコーディング / Base64 / MD5 / SHA-1 / CRC32 / 他、様々な文字列、数値、日時、色のフォーマットに対応しています。
all.all.tooltip=変換したい値を入力してください。 (例. 文字列: "Hello!" / 数値: "1234.5" / 日時: "1984-02-07T12:34:56" / 色: "rgb(255 0 0)")


string.all.method=文字列 - 全て
string.all.title=文字列エンコード＆デコード Online
string.all.desc=文字列のエンコード＆デコードが行えます。 HTMLエスケープ / URLエンコーディング / Base64 / Quoted-printable / 他、様々なフォーマットに対応しています。
string.all.tooltip=変換したい文字列を入力してください。 (例. "Hello, world!")

string.bin.method=2進数文字列
string.bin.title=2進数バイナリ文字列変換 日本語変換 Online
string.bin.desc=2進数バイナリ文字列の変換が行えます。 (例. "Hello, world!" <=> "01001000 01100101 01101100 01101100 01101111 00101100 00100000 01110111 01101111 01110010 01101100 01100100 00100001")
string.bin.tooltip=変換したい文字列を入力してください。 (例. "Hello, world!" <=> "01001000 01100101 01101100 01101100 01101111 00101100 00100000 01110111 01101111 01110010 01101100 01100100 00100001")
string.bin.func.encStrBin=2進数文字列
string.bin.func.decStrBin=2進数文字列
string.bin.separator-each=区切り
string.bin.separator-each.none=なし
string.bin.separator-each.4bits=4ビットごと
string.bin.separator-each.8bits=8ビットごと (1バイトごと)
string.bin.separator-each.16bits=16ビットごと (2バイトごと)
string.bin.separator-each.24bits=24ビットごと (3バイトごと)
string.bin.separator-each.32bits=32ビットごと (4バイトごと)
string.bin.separator-each.64bits=64ビットごと (8バイトごと)
string.bin.separator-each.128bits=128ビットごと (16バイトごと)

string.hex.method=16進数文字列
string.hex.title=16進数バイナリ文字列変換 日本語変換 Online
string.hex.desc=16進数バイナリ文字列の変換が行えます。 (例. "Hello, world!" <=> "48 65 6C 6C 6F 2C 20 77 6F 72 6C 64 21")
string.hex.tooltip=変換したい文字列を入力してください。 (例. "Hello, world!" <=> "48 65 6C 6C 6F 2C 20 77 6F 72 6C 64 21")
string.hex.func.encStrHex=16進数文字列
string.hex.func.decStrHex=16進数文字列
string.hex.separator-each=区切り
string.hex.separator-each.none=なし
string.hex.separator-each.1byte=1バイトごと
string.hex.separator-each.2bytes=2バイトごと
string.hex.separator-each.3bytes=3バイトごと
string.hex.separator-each.4bytes=4バイトごと
string.hex.separator-each.8bytes=8バイトごと
string.hex.separator-each.16bytes=16バイトごと
string.hex.case=A-F
string.hex.case.lower=小文字 (a-f)
string.hex.case.upper=大文字 (A-F)

string.html-escape.method=HTMLエスケープ
string.html-escape.title=HTML5 エスケープ / アンエスケープ (エンコーダー / デコーダー) Online
string.html-escape.desc=HTMLエスケープの変換が行えます。 (例. "<p>Hello, world!</p>" <=> "&lt;p&gt;Hello, world!&lt;/p&gt;")
string.html-escape.tooltip=変換したい文字列を入力してください。 (例. "<p>Hello, world!</p>" <=> "&lt;p&gt;Hello, world!&lt;/p&gt;")
string.html-escape.func.encStrHTMLEscape=HTMLエスケープ (基本)
string.html-escape.func.encStrHTMLEscapeFully=HTMLエスケープ (全て)
string.html-escape.func.decStrHTMLEscape=HTMLエスケープ

string.url-encoding.method=URLエンコーディング
string.url-encoding.title=URLエンコーディング エンコーダー / デコーダー Online
string.url-encoding.desc=URLエンコーディングの変換が行えます。 (例. "Hello, world!" <=> "Hello%2C%20world%21")
string.url-encoding.tooltip=変換したい文字列を入力してください。 (例. "Hello, world!" <=> "Hello%2C%20world%21")
string.url-encoding.func.encStrURLEncoding=URLエンコーディング
string.url-encoding.func.decStrURLEncoding=URLエンコーディング
string.url-encoding.space=スペース
string.url-encoding.space.default=%20 (パーセント・エンコーディング)
string.url-encoding.space.form=+ (application/x-www-form-urlencoded)

string.punycode.method=Punycode IDN
string.punycode.title=Punycode IDN 日本語ドメイン 国際化ドメイン名 変換 Online
string.punycode.desc=Punycode IDN 日本語ドメイン 国際化ドメイン名の変換が行えます。 (例. "ドメイン.com" <=> "xn--eckwd4c7c.com")
string.punycode.tooltip=変換したいドメイン名を入力してください。 (例. "ドメイン.com" <=> "xn--eckwd4c7c.com")
string.punycode.func.encStrPunycode=Punycode IDN
string.punycode.func.decStrPunycode=Punycode IDN

string.base32.method=Base32
string.base32.title=Base32エンコーダー / デコーダー Online
string.base32.desc=Base32の変換が行えます。 (例. "Hello, world!" <=> "JBSWY3DPFQQHO33SNRSCC===")
string.base32.tooltip=変換したい文字列を入力してください。 (例. "Hello, world!" <=> "JBSWY3DPFQQHO33SNRSCC===")
string.base32.func.encStrBase32=Base32
string.base32.func.decStrBase32=Base32

string.base45.method=Base45
string.base45.title=Base45エンコーダー / デコーダー Online
string.base45.desc=Base45の変換が行えます。 (例. "Hello, world!" <=> "%69 VDK2EV4404ESVDX0")
string.base45.tooltip=変換したい文字列を入力してください。 (例. "Hello, world!" <=> "%69 VDK2EV4404ESVDX0")
string.base45.func.encStrBase45=Base45
string.base45.func.decStrBase45=Base45
string.base45.func.decStrBase45ZlibCoseCbor=Base45/Zlib/COSE/CBOR

string.base64.method=Base64
string.base64.title=Base64エンコーダー / デコーダー Online
string.base64.desc=Base64の変換が行えます。 (例. "Hello, world!" <=> "SGVsbG8sIHdvcmxkIQ==")
string.base64.tooltip=変換したい文字列を入力してください。 (例. "Hello, world!" <=> "SGVsbG8sIHdvcmxkIQ==")
string.base64.func.encStrBase64=Base64
string.base64.func.decStrBase64=Base64
string.base64.line-break-each=改行
string.base64.line-break-each.none=なし
string.base64.line-break-each.64=64文字ごと (PEM - RFC 1421)
string.base64.line-break-each.76=76文字ごと (MIME - RFC 2045)

string.ascii85.method=Ascii85
string.ascii85.title=Ascii85 Z85/Adobe/btoa エンコーダー / デコーダー Online
string.ascii85.desc=Ascii85 Z85/Adobe/btoa の変換が行えます。 (例. "Hello, world!" <=> "nm=QNz.92Pz/PV8aP")
string.ascii85.tooltip=変換したい文字列を入力してください。 (例. "Hello, world!" <=> "nm=QNz.92Pz/PV8aP")
string.ascii85.func.encStrAscii85=Ascii85
string.ascii85.func.decStrAscii85=Ascii85
string.ascii85.variant=種類
string.ascii85.variant.z85=Z85 (ZeroMQ)
string.ascii85.variant.adobe=Adobe
string.ascii85.variant.btoa=btoa

string.quoted-printable.method=Quoted-printable
string.quoted-printable.title=Quoted-printableエンコーダー / デコーダー Online
string.quoted-printable.desc=Quoted-printableの変換が行えます。 (例. "Hello, != world!" <=> "Hello, !=3D world!")
string.quoted-printable.tooltip=変換したい文字列を入力してください。 (例. "Hello, != world!" <=> "Hello, !=3D world!")
string.quoted-printable.func.encStrQuotedPrintable=Quoted-printable
string.quoted-printable.func.decStrQuotedPrintable=Quoted-printable

string.unicode-escape.method=Unicodeエスケープ
string.unicode-escape.title=Unicodeエスケープ (\\u %u \\x &#x U+ 0x \\N) エンコーダー / デコーダー Online
string.unicode-escape.desc=Unicodeエスケープの変換が行えます。 (例. "Hello, world!" <=> "\\u0048\\u0065\\u006c\\u006c\\u006f\\u002c\\u0020\\u0077\\u006f\\u0072\\u006c\\u0064\\u0021")
string.unicode-escape.tooltip=変換したい文字列を入力してください。 (例. "Hello, world!" <=> "\\u0048\\u0065\\u006c\\u006c\\u006f\\u002c\\u0020\\u0077\\u006f\\u0072\\u006c\\u0064\\u0021")
string.unicode-escape.func.encStrUnicodeEscape=Unicodeエスケープ
string.unicode-escape.func.decStrUnicodeEscape=Unicodeエスケープ
string.unicode-escape.notation=形式
string.unicode-escape.notation.cubu=\\uXXXX
string.unicode-escape.notation.cpbu_bub=\\uXXXX or \\u{X}
string.unicode-escape.notation.cpbu_bU=\\uXXXX or \\U00XXXXXX
string.unicode-escape.notation.cpbub=\\u{X}
string.unicode-escape.notation.cpbxb=\\x{X}
string.unicode-escape.notation.cpb=\\X
string.unicode-escape.notation.cpahx=&#xX;
string.unicode-escape.notation.cupu=%uXXXX
string.unicode-escape.notation.cp=U+XXXX
string.unicode-escape.notation.cp0x=0xX
string.unicode-escape.notation.cnbNb=\\N{name}
string.unicode-escape.case=A-F
string.unicode-escape.case.upper=大文字 (A-F)
string.unicode-escape.case.lower=小文字 (a-f)

string.program-string.method=プログラム文字列
string.program-string.title=プログラム文字列エスケープ / アンエスケープ Online
string.program-string.desc=プログラム文字列の変換が行えます。 (例. "Hello,	world!" <=> ""Hello,\\tworld!"")
string.program-string.tooltip=変換したい文字列を入力してください。 (例. "Hello,	world!" <=> ""Hello,\\tworld!"")
string.program-string.func.encStrProgramString=プログラム文字列
string.program-string.func.decStrProgramString=プログラム文字列
string.program-string.quotes=引用符
string.program-string.quotes.double=ダブル (")
string.program-string.quotes.single=シングル (')
string.program-string.quotes.none=なし

string.morse-code.method=モールス符号
string.morse-code.title=モールス符号変換 Online
string.morse-code.desc=モールス符号の変換が行えます。 (例. "Hello, world!" <=> ".... . .-.. .-.. --- --..-- / .-- --- .-. .-.. -.. -.-.--")
string.morse-code.tooltip=変換したい文字列を入力してください。 (例. "Hello, world!" <=> ".... . .-.. .-.. --- --..-- / .-- --- .-. .-.. -.. -.-.--")
string.morse-code.func.encStrMorseCode=モールス符号
string.morse-code.func.decStrMorseCode=モールス符号
string.morse-code.variant=種類
string.morse-code.variant.international=英語 (欧文)
string.morse-code.variant.japanese=日本語 (和文)
string.morse-code.variant.russian=ロシア語 (キリル文字)

string.braille.method=点字
string.braille.title=点字変換 Online
string.braille.desc=点字の変換が行えます。 (例. "Hello, world!" <=> "⠠⠓⠑⠇⠇⠕⠂⠀⠺⠕⠗⠇⠙⠖")
string.braille.tooltip=変換したい文字列を入力してください。 (例. "Hello, world!" <=> "⠠⠓⠑⠇⠇⠕⠂⠀⠺⠕⠗⠇⠙⠖")
string.braille.func.encStrBraille=点字
string.braille.func.decStrBraille=点字
string.braille.variant=種類
string.braille.variant.ueb1=英語 (UEB Grade 1)
string.braille.variant.japanese=日本語

string.character-width.method=半角・全角文字
string.character-width.title=半角・全角文字変換 Online
string.character-width.desc=プログラム文字列の変換が行えます。 (例. "Hello, world!" <=> "Ｈｅｌｌｏ，　ｗｏｒｌｄ！")
string.character-width.tooltip=変換したい文字列を入力してください。 (例. "Hello, world!" <=> "Ｈｅｌｌｏ，　ｗｏｒｌｄ！")
string.character-width.func.encStrHalfWidth=半角文字
string.character-width.func.encStrFullWidth=全角文字

string.letter-case.method=大文字・小文字
string.letter-case.title=大文字・小文字変換 Online
string.letter-case.desc=大文字・小文字の変換が行えます。 (例. "Hello, world!" => "HELLO, WORLD!", "hello, world!", "hELLO, WORLD!", "Hello, World!")
string.letter-case.tooltip=変換したい文字列を入力してください。 (例. "Hello, world!" => "HELLO, WORLD!", "hello, world!", "hELLO, WORLD!", "Hello, World!")
string.letter-case.func.encStrUpperCase=大文字
string.letter-case.func.encStrLowerCase=小文字
string.letter-case.func.encStrSwapCase=大小文字変換
string.letter-case.func.encStrCapitalize=大文字開始
string.letter-case.func.encStrAlternatingCaps=aLtErNaTiNg CaPs
string.letter-case.alt-variant=種類
string.letter-case.alt-variant.lower-upper=lOwEr UpPeR
string.letter-case.alt-variant.upper-lower=UpPeR lOwEr
string.letter-case.alt-variant.vowels-lower=VoWeLS LoWeR
string.letter-case.alt-variant.vowels-upper=vOwEls UppEr

string.text-initials.method=イニシャルテキスト
string.text-initials.title=文字列イニシャル変換 Online
string.text-initials.desc=文字列のイニシャル変換が行えます。 (例. "Hello, world!" => "Hw")
string.text-initials.tooltip=変換したい文字列を入力してください。 (例. "Hello, world!" => "Hw")
string.text-initials.func.encStrInitials=イニシャル

string.text-reverse.method=逆順テキスト
string.text-reverse.title=文字列逆順変換 Online
string.text-reverse.desc=文字列の逆順変換が行えます。 (例. "Hello, world!" <=> "!dlrow ,olleH")
string.text-reverse.tooltip=変換したい文字列を入力してください。 (例. "Hello, world!" <=> "!dlrow ,olleH")
string.text-reverse.func.encStrReverse=逆順

string.naming-convention.method=命名規約
string.naming-convention.title=キャメルケース / スネークケース / ケバブケース / 命名規約 変換 Online
string.naming-convention.desc=キャメルケース / スネークケース / ケバブケース / 命名規約への変換が行えます。 (例. "Hello, world!" => "HelloWorld", "helloWorld", "HELLO_WORLD", "hello_world", "HELLO-WORLD", "hello-world")
string.naming-convention.tooltip=変換したい文字列を入力してください。 (例. "Hello, world!" => "HelloWorld", "helloWorld", "HELLO_WORLD", "hello_world", "HELLO-WORLD", "hello-world")

string.camel-case.method=キャメルケース
string.camel-case.title=キャメルケース(パスカルケース)変換 Online
string.camel-case.desc=キャメルケース(パスカルケース)への変換が行えます。 (例. "Hello, world!" => "HelloWorld", "helloWorld")
string.camel-case.tooltip=変換したい文字列を入力してください。 (例. "Hello, world!" => "HelloWorld", "helloWorld")
string.camel-case.func.encStrUpperCamelCase=UpperCamelCase
string.camel-case.func.encStrLowerCamelCase=lowerCamelCase

string.snake-case.method=スネークケース
string.snake-case.title=スネークケース変換 Online
string.snake-case.desc=スネークケースへの変換が行えます。 (例. "Hello, world!" => "HELLO_WORLD", "hello_world")
string.snake-case.tooltip=変換したい文字列を入力してください。 (例. "Hello, world!" => "HELLO_WORLD", "hello_world")
string.snake-case.func.encStrUpperSnakeCase=UPPER_SNAKE_CASE
string.snake-case.func.encStrLowerSnakeCase=lower_snake_case

string.kebab-case.method=ケバブケース
string.kebab-case.title=ケバブケース変換 Online
string.kebab-case.desc=ケバブケースへの変換が行えます。 (例. "Hello, world!" => "HELLO-WORLD", "hello-world")
string.kebab-case.tooltip=変換したい文字列を入力してください。 (例. "Hello, world!" => "HELLO-WORLD", "hello-world")
string.kebab-case.func.encStrUpperKebabCase=UPPER-KEBAB-CASE
string.kebab-case.func.encStrLowerKebabCase=lower-kebab-case

string.font-style.method=フォントスタイル
string.font-style.title=フォントスタイル変換 Online
string.font-style.desc=フォントスタイルの変換が行えます。 (例. "Hello, world!" => "𝐻𝑒𝓁𝓁𝑜, 𝓌𝑜𝓇𝓁𝒹!")
string.font-style.tooltip=変換したい文字列を入力してください。 (例. "Hello, world!" => "𝐻𝑒𝓁𝓁𝑜, 𝓌𝑜𝓇𝓁𝒹!")
string.font-style.func.encStrFontStyle=フォントスタイル
string.font-style.style=スタイル
string.font-style.style.none=なし
string.font-style.style.bold=太字
string.font-style.style.italic=斜体
string.font-style.style.bold-italic=太字＆斜体

string.unicode-normalization.method=Unicode正規化
string.unicode-normalization.title=Unicode正規化 (NFC, NFKC, NFD, NFKD) 変換 Online
string.unicode-normalization.desc=Unicode正規化 (NFC, NFKC, NFD, NFKD) の変換が行えます。
string.unicode-normalization.tooltip=変換したい文字列を入力してください。
string.unicode-normalization.func.encStrUnicodeNFC=正規化
string.unicode-normalization.func.encStrUnicodeNFKC=正規化(互換)
string.unicode-normalization.func.decStrUnicodeNFC=非正規化
string.unicode-normalization.func.decStrUnicodeNFKC=非正規化(互換)

string.line-sort.method=行ソート
string.line-sort.title=テキスト行のソート (昇順, 皇潤, 逆順) Online
string.line-sort.desc=テキスト行のソート (昇順, 皇潤, 逆順) が行えます。
string.line-sort.tooltip=変換したい複数行の文字列を入力してください。
string.line-sort.func.encStrLineSort=行ソート
string.line-sort.order=順序
string.line-sort.order.asc=昇順
string.line-sort.order.desc=降順
string.line-sort.order.reverse=逆順

string.line-unique.method=重複行削除
string.line-unique.title=テキスト行の重複行削除 Online
string.line-unique.desc=テキスト行の重複行削除が行えます。
string.line-unique.tooltip=変換したい複数行の文字列を入力してください。
string.line-unique.func.encStrLineUnique=重複行削除


number.all.method=数値 - 全て
number.all.title=数値変換 Online
number.all.desc=数値の変換が行えます。 2進数 / 8進数 / 10進数 / 16進数 / 英語数字 / 漢数字 / 他、様々なフォーマットに対応しています。
number.all.tooltip=変換したい数値を入力してください。 (例. 10進: "1234.5" / 2進: "10011010010.1" / 8進: "2322.4" / 16進: "499602d2" / 英語数字: "One Thousand Two Hundred Thirty-Four point Five" / 漢数字: "千二百三十四・五", "壱阡弐陌参拾肆・伍")

number.dec.method=10進数
number.dec.title=10進数 数値変換 Online
number.dec.desc=10進数の数値の変換が行えます。 例. "1234.5" <=> "1234.5"
number.dec.tooltip=変換したい数値を入力してください。 (例. "1234.5" <=> "1234.5")
number.dec.func.encNumDec=数値から10進数
number.dec.func.decNumDec=10進数から数値(10進)

number.bin.method=2進数
number.bin.title=2進数 数値変換 Online
number.bin.desc=2進数の数値の変換が行えます。 例. "1234.5" <=> "10011010010.1"
number.bin.tooltip=変換したい数値を入力してください。 (例. "1234.5" <=> "10011010010.1")
number.bin.func.encNumBin=数値から2進数
number.bin.func.decNumBin=2進数から数値(10進)

number.oct.method=8進数
number.oct.title=8進数 数値変換 Online
number.oct.desc=8進数の数値の変換が行えます。 例. "1234.5" <=> "2322.4"
number.oct.tooltip=変換したい数値を入力してください。 (例. "1234.5" <=> "2322.4")
number.oct.func.encNumOct=数値から8進数
number.oct.func.decNumOct=8進数から数値(10進)

number.hex.method=16進数
number.hex.title=16進数 数値変換 Online
number.hex.desc=16進数の数値の変換が行えます。 例. "1234.5" <=> "4d2.8"
number.hex.tooltip=変換したい数値を入力してください。 (例. "1234.5" <=> "4d2.8")
number.hex.func.encNumHex=数値から16進数
number.hex.func.decNumHex=16進数から数値(10進)

number.n-ary.method=N進数
number.n-ary.title=N進数 数値変換 Online
number.n-ary.desc=2〜36進数の数値の変換が行えます。 例. "1234.5" <=> "16i.g"
number.n-ary.tooltip=変換したい数値を入力してください。 (例. "1234.5" <=> "16i.g")
number.n-ary.func.encNumNAry=数値からN進数
number.n-ary.func.decNumNAry=N進数から数値(10進)
number.n-ary.radix=基数

number.fraction.method=分数
number.fraction.title=分数 数値変換 Online
number.fraction.desc=分数の数値の変換が行えます。 例. "1234.5" <=> "2469/2"
number.fraction.tooltip=変換したい数値を入力してください。 (例. "1234.5" <=> "2469/2")
number.fraction.func.encNumFraction=数値から分数

number.english.method=英語数字
number.english.title=英語数字 数値変換 Online
number.english.desc=英語数字の数値の変換が行えます。 例. "1234.5" <=> "One Thousand Two Hundred Thirty-Four point Five"
number.english.tooltip=変換したい数値を入力してください。 (例. "1234.5" <=> "One Thousand Two Hundred Thirty-Four point Five")
number.english.func.encNumEnShortScale=数値から英語
number.english.func.decNumEnShortScale=英語から数値(10進)
number.english.decimal-notation=小数部表現
number.english.decimal-notation.default=数字の英語ワード
number.english.decimal-notation.fraction=分数
number.english.system=システム
number.english.system.default=CW4EN
number.english.system.cw=Conway-Wechsler

number.japanese.method=漢数字
number.japanese.title=漢数字 漢字/大字 数値変換 Online
number.japanese.desc=漢数字 漢字/大字の数値の変換が行えます。 例. "1234.5" <=> "千二百三十四・五", "壱阡弐陌参拾肆・伍"
number.japanese.tooltip=変換したい数値を入力してください。 (例. "1234.5" <=> "千二百三十四・五", "壱阡弐陌参拾肆・伍")
number.japanese.func.encNumJP=数値から漢数字
number.japanese.func.encNumJPDaiji=数値から漢数字(大字)
number.japanese.func.decNumJP=漢数字から数値(10進)


date.all.method=日時 - 全て
date.all.title=日時変換 Online
date.all.desc=日時の変換が行えます。 UNIXタイム / W3C-DTF日時 / ISO8601日時 / RFC2822日時 / 他、様々なフォーマットに対応しています。
date.all.tooltip=変換したい日時を入力してください。 (例. UNIXタイム: "444972896.789" / ISO8601日時: "1984-02-07T12:34:56.789+09:00" / RFC2822日時: "Tue, 07 Feb 1984 12:34:56 JST")

date.unix-time.method=UNIXタイム
date.unix-time.title=UNIXタイム (POSIXタイム) 日時変換 Online
date.unix-time.desc=UNIXタイム (POSIXタイム) の日時変換が行えます。 例. ISO8601: "1984-02-07T12:34:56.789+09:00", RFC2822: "Tue, 07 Feb 1984 12:34:56 JST" => UNIX Time: "444972896.789"
date.unix-time.tooltip=変換したい日付時刻を入力してください。 (例. ISO8601: "1984-02-07T12:34:56.789+09:00", RFC2822: "Tue, 07 Feb 1984 12:34:56 JST" => UNIX Time: "444972896.789")
date.unix-time.func.encDateUnixTime=UNIXタイム [秒]

date.w3cdtf.method=W3C-DTF日時
date.w3cdtf.title=W3C-DTF日時変換 Online
date.w3cdtf.desc=W3C-DTF日時の変換が行えます。 例. UNIX Time: "444972896.789", RFC2822: "Tue, 07 Feb 1984 12:34:56 JST" => W3C-DTF: "1984-02-07T12:34:56.789+09:00"
date.w3cdtf.tooltip=変換したい日時を入力してください。 (例. UNIX Time: "444972896.789", RFC2822: "Tue, 07 Feb 1984 12:34:56 JST" => W3C-DTF: "1984-02-07T12:34:56.789+09:00")
date.w3cdtf.func.encDateW3CDTF=W3C-DTF日時

date.iso8601.method=ISO8601日時
date.iso8601.title=ISO8601日時変換 Online
date.iso8601.desc=ISO8601日時の変換が行えます。 例. UNIX Time: "444972896.789", RFC2822: "Tue, 07 Feb 1984 12:34:56 JST" => ISO8601: "1984-02-07T12:34:56.789+09:00"
date.iso8601.tooltip=変換したい日時を入力してください。 (例. UNIX Time: "444972896.789", RFC2822: "Tue, 07 Feb 1984 12:34:56 JST" => ISO8601: "1984-02-07T12:34:56.789+09:00")
date.iso8601.func.encDateISO8601=ISO8601日時
date.iso8601.func.encDateISO8601Ext=ISO8601日時 (拡張)
date.iso8601.func.encDateISO8601Week=ISO8601日時 (週)
date.iso8601.func.encDateISO8601Ordinal=ISO8601日時 (日)
date.iso8601.decimal-separator=小数点
date.iso8601.decimal-separator.dot=ドット (.)
date.iso8601.decimal-separator.comma=カンマ (,)

date.rfc2822.method=RFC2822日時
date.rfc2822.title=RFC2822日時変換 Online
date.rfc2822.desc=RFC2822日時の変換が行えます。 例. UNIX Time: "444972896.789", ISO8601: "1984-02-07T12:34:56.789+09:00" => RFC2822: "Tue, 07 Feb 1984 12:34:56 JST"
date.rfc2822.tooltip=変換したい日時を入力してください。 (例. UNIX Time: "444972896.789", ISO8601: "1984-02-07T12:34:56.789+09:00" => RFC2822: "Tue, 07 Feb 1984 12:34:56 JST")
date.rfc2822.func.encDateRFC2822=RFC2822日時

date.ctime.method=ctime日時
date.ctime.title=ctime日時変換 Online
date.ctime.desc=ctime日時の変換が行えます。 例. UNIX Time: "444972896.789", ISO8601: "1984-02-07T12:34:56.789+09:00" => ctime: "Tue Feb 07 12:34:56 1984"
date.ctime.tooltip=変換したい日時を入力してください。 (例. UNIX Time: "444972896.789", ISO8601: "1984-02-07T12:34:56.789+09:00" => ctime: "Tue Feb 07 12:34:56 1984")
date.ctime.func.encDateCTime=ctime日時

date.japanese-era.method=和暦
date.japanese-era.title=和暦日時変換 Online
date.japanese-era.desc=和暦日時の変換が行えます。 例. UNIX Time: "444972896.789", ISO8601: "1984-02-07T12:34:56.789+09:00" => 和暦: "昭和59年02月07日03時34分56.789秒"
date.japanese-era.tooltip=変換したい日時を入力してください。 (例. UNIX Time: "444972896.789", ISO8601: "1984-02-07T12:34:56.789+09:00" => 和暦: "昭和59年02月07日03時34分56.789秒")
date.japanese-era.func.encDateJapaneseEra=和暦


color.all.method=カラー - 全て
color.all.title=カラー変換 Online
color.all.desc=カラーの変換が行えます。 RGB / HSL / HSV / CMYK / 他、様々なフォーマットに対応しています。
color.all.tooltip=変換したいカラーを入力してください。 (例. "red", "#ff0000", "rgb(255 0 0)", "hsv(0 100% 100%)", "device-cmyk(0% 100% 100% 0%)")

color.name.method=カラー名
color.name.title=カラー名変換 Online
color.name.desc=カラー名の変換が行えます。 例. "#ff0000", "rgb(255 0 0)", "hsl(0 100% 50%)", "hsv(0 100% 100%)", "device-cmyk(0% 100% 100% 0%)" => "red"
color.name.tooltip=変換したいカラーを入力してください。 (例. "#ff0000", "rgb(255 0 0)", "hsl(0 100% 50%)", "hsv(0 100% 100%)", "device-cmyk(0% 100% 100% 0%)" => "red")
color.name.func.encColorName=カラー名

color.rgb.method=RGBカラー
color.rgb.title=RGBカラー変換 Online
color.rgb.desc=RGBカラーの変換が行えます。 例. "red", "hsl(0 100% 50%)", "hsv(0 100% 100%)", "device-cmyk(0% 100% 100% 0%)" => "#ff0000", "rgb(255 0 0)"
color.rgb.tooltip=変換したいカラーを入力してください。 (例. "red", "hsl(0 100% 50%)", "hsv(0 100% 100%)", "device-cmyk(0% 100% 100% 0%)" => "#ff0000", "rgb(255 0 0)")
color.rgb.func.encColorRGBHex=RGBカラー (16進)
color.rgb.func.encColorRGBFn=RGBカラー
color.rgb.notation=表記
color.rgb.notation.percentage=パーセンテージ [0%..100%]
color.rgb.notation.number=数値 [0..255]

color.hsl.method=HSLカラー
color.hsl.title=HSLカラー変換 Online
color.hsl.desc=HSLカラーの変換が行えます。 例. "red", "#ff0000", "rgb(255 0 0)", "hsv(0 100% 100%)", "device-cmyk(0% 100% 100% 0%)" => "hsl(0 100% 50%)"
color.hsl.tooltip=変換したいカラーを入力してください。 (例. "red", "#ff0000", "rgb(255 0 0)", "hsv(0 100% 100%)", "device-cmyk(0% 100% 100% 0%)" => "hsl(0 100% 50%)")
color.hsl.func.encColorHSLFn=HSLカラー

color.hsv.method=HSVカラー
color.hsv.title=HSVカラー変換 Online
color.hsv.desc=HSVカラーの変換が行えます。 例. "red", "#ff0000", "rgb(255 0 0)", "hsl(0 100% 50%)", "device-cmyk(0% 100% 100% 0%)" => "hsv(0 100% 100%)"
color.hsv.tooltip=変換したいカラーを入力してください。 (例. "red", "#ff0000", "rgb(255 0 0)", "hsl(0 100% 50%)", "device-cmyk(0% 100% 100% 0%)" => "hsv(0 100% 100%)")
color.hsv.func.encColorHSVFn=HSVカラー

color.cmyk.method=CMYKカラー
color.cmyk.title=CMYKカラー変換 Online
color.cmyk.desc=CMYKカラーの変換が行えます。 例. "red", "#ff0000", "rgb(255 0 0)", "hsl(0 100% 50%)", "hsv(0 100% 100%)" => "device-cmyk(0% 100% 100% 0%)"
color.cmyk.tooltip=変換したいカラーを入力してください。 (例. "red", "#ff0000", "rgb(255 0 0)", "hsl(0 100% 50%)", "hsv(0 100% 100%)" => "device-cmyk(0% 100% 100% 0%)")
color.cmyk.func.encColorCMYKFn=CMYKカラー


cipher.all.method=暗号 - 全て
cipher.all.title=暗号 暗号化・復号化 解読 変換 Online
cipher.all.desc=暗号の暗号化・復号化が行えます。 例. シーザー暗号 / ROT / and many other formats!
cipher.all.tooltip=変換したい値を入力してください。 (例. "Hello, world!")

cipher.caesar.method=シーザー暗号
cipher.caesar.title=シーザー暗号 暗号化 / 復号化 Online
cipher.caesar.desc=シーザー暗号の暗号化・復号化が行えます。
cipher.caesar.tooltip=変換したい値を入力してください。 (例. "Hello, world 123!" => "Ebiil, tloia!")
cipher.caesar.func.encCipherCaesar=シーザー暗号
cipher.caesar.func.decCipherCaesar=シーザー暗号
cipher.caesar.shift=シフト
cipher.caesar.shift.b42=-42
cipher.caesar.shift.b41=-41
cipher.caesar.shift.b40=-40
cipher.caesar.shift.b39=-39
cipher.caesar.shift.b38=-38
cipher.caesar.shift.b37=-37
cipher.caesar.shift.b36=-36
cipher.caesar.shift.b35=-35
cipher.caesar.shift.b34=-34
cipher.caesar.shift.b33=-33
cipher.caesar.shift.b32=-32
cipher.caesar.shift.b31=-31
cipher.caesar.shift.b30=-30
cipher.caesar.shift.b29=-29
cipher.caesar.shift.b28=-28
cipher.caesar.shift.b27=-27
cipher.caesar.shift.b26=-26
cipher.caesar.shift.b25=-25 (A -> B)
cipher.caesar.shift.b24=-24 (A -> C)
cipher.caesar.shift.b23=-23 (A -> D)
cipher.caesar.shift.b22=-22 (A -> E)
cipher.caesar.shift.b21=-21 (A -> F)
cipher.caesar.shift.b20=-20 (A -> G)
cipher.caesar.shift.b19=-19 (A -> H)
cipher.caesar.shift.b18=-18 (A -> I)
cipher.caesar.shift.b17=-17 (A -> J)
cipher.caesar.shift.b16=-16 (A -> K)
cipher.caesar.shift.b15=-15 (A -> L)
cipher.caesar.shift.b14=-14 (A -> M)
cipher.caesar.shift.b13=-13 (A -> N)
cipher.caesar.shift.b12=-12 (A -> O)
cipher.caesar.shift.b11=-11 (A -> P)
cipher.caesar.shift.b10=-10 (A -> Q)
cipher.caesar.shift.b9=-9 (A -> R)
cipher.caesar.shift.b8=-8 (A -> S)
cipher.caesar.shift.b7=-7 (A -> T)
cipher.caesar.shift.b6=-6 (A -> U)
cipher.caesar.shift.b5=-5 (A -> V)
cipher.caesar.shift.b4=-4 (A -> W)
cipher.caesar.shift.b3=-3 (A -> X)
cipher.caesar.shift.b2=-2 (A -> Y)
cipher.caesar.shift.b1=-1 (A -> Z)
cipher.caesar.shift.1=1 (A -> B)
cipher.caesar.shift.2=2 (A -> C)
cipher.caesar.shift.3=3 (A -> D)
cipher.caesar.shift.4=4 (A -> E)
cipher.caesar.shift.5=5 (A -> F)
cipher.caesar.shift.6=6 (A -> G)
cipher.caesar.shift.7=7 (A -> H)
cipher.caesar.shift.8=8 (A -> I)
cipher.caesar.shift.9=9 (A -> J)
cipher.caesar.shift.10=10 (A -> K)
cipher.caesar.shift.11=11 (A -> L)
cipher.caesar.shift.12=12 (A -> M)
cipher.caesar.shift.13=13 (A -> N)
cipher.caesar.shift.14=14 (A -> O)
cipher.caesar.shift.15=15 (A -> P)
cipher.caesar.shift.16=16 (A -> Q)
cipher.caesar.shift.17=17 (A -> R)
cipher.caesar.shift.18=18 (A -> S)
cipher.caesar.shift.19=19 (A -> T)
cipher.caesar.shift.20=20 (A -> U)
cipher.caesar.shift.21=21 (A -> V)
cipher.caesar.shift.22=22 (A -> W)
cipher.caesar.shift.23=23 (A -> X)
cipher.caesar.shift.24=24 (A -> Y)
cipher.caesar.shift.25=25 (A -> Z)
cipher.caesar.shift.26=26
cipher.caesar.shift.27=27
cipher.caesar.shift.28=28
cipher.caesar.shift.29=29
cipher.caesar.shift.30=30
cipher.caesar.shift.31=31
cipher.caesar.shift.32=32
cipher.caesar.shift.33=33
cipher.caesar.shift.34=34
cipher.caesar.shift.35=35
cipher.caesar.shift.36=36
cipher.caesar.shift.37=37
cipher.caesar.shift.38=38
cipher.caesar.shift.39=39
cipher.caesar.shift.40=40
cipher.caesar.shift.41=41
cipher.caesar.shift.42=42
_cipher.caesar.shift=シフト
_cipher.caesar.shift.b42=-42
_cipher.caesar.shift.b41=-41
_cipher.caesar.shift.b40=-40
_cipher.caesar.shift.b39=-39
_cipher.caesar.shift.b38=-38
_cipher.caesar.shift.b37=-37
_cipher.caesar.shift.b36=-36
_cipher.caesar.shift.b35=-35
_cipher.caesar.shift.b34=-34
_cipher.caesar.shift.b33=-33
_cipher.caesar.shift.b32=-32
_cipher.caesar.shift.b31=-31
_cipher.caesar.shift.b30=-30
_cipher.caesar.shift.b29=-29
_cipher.caesar.shift.b28=-28
_cipher.caesar.shift.b27=-27
_cipher.caesar.shift.b26=-26
_cipher.caesar.shift.b25=-25 (A <- B)
_cipher.caesar.shift.b24=-24 (A <- C)
_cipher.caesar.shift.b23=-23 (A <- D)
_cipher.caesar.shift.b22=-22 (A <- E)
_cipher.caesar.shift.b21=-21 (A <- F)
_cipher.caesar.shift.b20=-20 (A <- G)
_cipher.caesar.shift.b19=-19 (A <- H)
_cipher.caesar.shift.b18=-18 (A <- I)
_cipher.caesar.shift.b17=-17 (A <- J)
_cipher.caesar.shift.b16=-16 (A <- K)
_cipher.caesar.shift.b15=-15 (A <- L)
_cipher.caesar.shift.b14=-14 (A <- M)
_cipher.caesar.shift.b13=-13 (A <- N)
_cipher.caesar.shift.b12=-12 (A <- O)
_cipher.caesar.shift.b11=-11 (A <- P)
_cipher.caesar.shift.b10=-10 (A <- Q)
_cipher.caesar.shift.b9=-9 (A <- R)
_cipher.caesar.shift.b8=-8 (A <- S)
_cipher.caesar.shift.b7=-7 (A <- T)
_cipher.caesar.shift.b6=-6 (A <- U)
_cipher.caesar.shift.b5=-5 (A <- V)
_cipher.caesar.shift.b4=-4 (A <- W)
_cipher.caesar.shift.b3=-3 (A <- X)
_cipher.caesar.shift.b2=-2 (A <- Y)
_cipher.caesar.shift.b1=-1 (A <- Z)
_cipher.caesar.shift.1=1 (A <- B)
_cipher.caesar.shift.2=2 (A <- C)
_cipher.caesar.shift.3=3 (A <- D)
_cipher.caesar.shift.4=4 (A <- E)
_cipher.caesar.shift.5=5 (A <- F)
_cipher.caesar.shift.6=6 (A <- G)
_cipher.caesar.shift.7=7 (A <- H)
_cipher.caesar.shift.8=8 (A <- I)
_cipher.caesar.shift.9=9 (A <- J)
_cipher.caesar.shift.10=10 (A <- K)
_cipher.caesar.shift.11=11 (A <- L)
_cipher.caesar.shift.12=12 (A <- M)
_cipher.caesar.shift.13=13 (A <- N)
_cipher.caesar.shift.14=14 (A <- O)
_cipher.caesar.shift.15=15 (A <- P)
_cipher.caesar.shift.16=16 (A <- Q)
_cipher.caesar.shift.17=17 (A <- R)
_cipher.caesar.shift.18=18 (A <- S)
_cipher.caesar.shift.19=19 (A <- T)
_cipher.caesar.shift.20=20 (A <- U)
_cipher.caesar.shift.21=21 (A <- V)
_cipher.caesar.shift.22=22 (A <- W)
_cipher.caesar.shift.23=23 (A <- X)
_cipher.caesar.shift.24=24 (A <- Y)
_cipher.caesar.shift.25=25 (A <- Z)
_cipher.caesar.shift.26=26
_cipher.caesar.shift.27=27
_cipher.caesar.shift.28=28
_cipher.caesar.shift.29=29
_cipher.caesar.shift.30=30
_cipher.caesar.shift.31=31
_cipher.caesar.shift.32=32
_cipher.caesar.shift.33=33
_cipher.caesar.shift.34=34
_cipher.caesar.shift.35=35
_cipher.caesar.shift.36=36
_cipher.caesar.shift.37=37
_cipher.caesar.shift.38=38
_cipher.caesar.shift.39=39
_cipher.caesar.shift.40=40
_cipher.caesar.shift.41=41
_cipher.caesar.shift.42=42

cipher.rot13.method=ROT13
cipher.rot13.title=ROT13暗号 暗号化 / 復号化 Online
cipher.rot13.desc=ROT13暗号の暗号化・復号化が行えます。
cipher.rot13.tooltip=変換したい値を入力してください。 (例. "Hello, world 123!" => "Uryyb, jbeyq 123!")
cipher.rot13.func.encCipherROT13=ROT13 (A-Z)
cipher.rot13.func.decCipherROT13=ROT13 (A-Z)

cipher.rot18.method=ROT18
cipher.rot18.title=ROT18暗号 暗号化 / 復号化 Online
cipher.rot18.desc=ROT18暗号の暗号化・復号化が行えます。
cipher.rot18.tooltip=変換したい値を入力してください。 (例. "Hello, world 123!" => "Uryyb, jbeyq 678!")
cipher.rot18.func.encCipherROT18=ROT18 (A-Z, 0-9)
cipher.rot18.func.decCipherROT18=ROT18 (A-Z, 0-9)

cipher.rot47.method=ROT47
cipher.rot47.title=ROT47暗号 暗号化 / 復号化 Online
cipher.rot47.desc=ROT47暗号の暗号化・復号化が行えます。
cipher.rot47.tooltip=変換したい値を入力してください。 (例. "Hello, world 123!" => "w6==@[ H@C=5 `abP")
cipher.rot47.func.encCipherROT47=ROT47 (!-~)
cipher.rot47.func.decCipherROT47=ROT47 (!-~)

cipher.atbash.method=アトバシュ
cipher.atbash.title=アトバシュ暗号 暗号化 / 復号化 Online
cipher.atbash.desc=アトバシュ暗号の暗号化・復号化が行えます。
cipher.atbash.tooltip=変換したい値を入力してください。 (例. "Hello, world!" => "Svool, dliow!")
cipher.atbash.func.encCipherAtbash=アトバシュ

cipher.affine.method=アフィン
cipher.affine.title=アフィン暗号 暗号化 / 復号化 Online
cipher.affine.desc=アフィン暗号の暗号化・復号化が行えます。
cipher.affine.tooltip=変換したい値を入力してください。 (例. "Hello, world!" => "Ebiil, tloia!")
cipher.affine.func.encCipherAffine=アフィン
cipher.affine.func.decCipherAffine=アフィン
cipher.affine.a=A
cipher.affine.b=B

cipher.vigenere.method=ヴィジュネル
cipher.vigenere.title=ヴィジュネル暗号 暗号化 / 復号化 Online
cipher.vigenere.desc=ヴィジュネル暗号の暗号化・復号化が行えます。
cipher.vigenere.tooltip=変換したい値を入力してください。 (例. "Hello, world!" => "Zincs, aqipw!")
cipher.vigenere.func.encCipherVigenere=ヴィジュネル
cipher.vigenere.func.decCipherVigenere=ヴィジュネル
cipher.vigenere.key=キー (A-Z)
cipher.vigenere.key.tooltip=例. SECRET

cipher.enigma.method=エニグマ
cipher.enigma.title=エニグマ暗号機シミュレーター Online
cipher.enigma.desc=エニグマ暗号の暗号化・復号化が行えます。
cipher.enigma.tooltip=変換したい値を入力してください。 (例. "Hello, world!" => "Kcubr, kidkn!")
cipher.enigma.func.encCipherEnigma=エニグマ
cipher.enigma.func.decCipherEnigma=エニグマ
cipher.enigma.machine=暗号機
cipher.enigma.wheels=ウィール
cipher.enigma.rings=リング設定
cipher.enigma.positions=ポジション設定
cipher.enigma.plugboard=プラグボード配線
cipher.enigma.plugboard.tooltip=e.g. AT BL DF GJ HM NW OP QY RZ VX
cipher.enigma.uhr=Uhr
cipher.enigma.ukwd=UKW-D配線
cipher.enigma.ukwd.tooltip=e.g. AQ BG CK DI EL FX HZ MW NV OT PU RS

cipher.jis-keyboard.method=みかか
cipher.jis-keyboard.title=みかか変換 暗号化 / 復号化 Online
cipher.jis-keyboard.desc=みかか変換の暗号化・複合化が行えmます。
cipher.jis-keyboard.tooltip=変換したい値を入力してください。 (例. "ntt" => "みかか")
cipher.jis-keyboard.func.encCipherJisKeyboard=みかか
cipher.jis-keyboard.mode=モード
cipher.jis-keyboard.mode.lenient=寛容
cipher.jis-keyboard.mode.strict=厳格

cipher.scytale.method=スキュタレー暗号
cipher.scytale.title=スキュタレー暗号 暗号化 / 復号化 Online
cipher.scytale.desc=スキュタレー暗号の暗号化・復号化が行えます。
cipher.scytale.tooltip=変換したい値を入力してください。 (例. "Hello, world!" => "Hweolrllod,! ")
cipher.scytale.func.encCipherScytale=スキュタレー
cipher.scytale.func.decCipherScytale=スキュタレー
cipher.scytale.key=文字数
cipher.scytale.key-per=／
cipher.scytale.key-per.y=1周 (1巻き)
cipher.scytale.key-per.x=1行

cipher.rail-fence.method=レールフェンス暗号
cipher.rail-fence.title=レールフェンス暗号 暗号化 / 復号化 Online
cipher.rail-fence.desc=レールフェンス暗号の暗号化・復号化が行えます。
cipher.rail-fence.tooltip=変換したい値を入力してください。 (例. "Hello, world!" => "Hlo ol!el,wrd")
cipher.rail-fence.func.encCipherRailFence=レールフェンス
cipher.rail-fence.func.decCipherRailFence=レールフェンス
cipher.rail-fence.key=レール数


hash.all.method=ハッシュ - 全て
hash.all.title=ハッシュ値計算 Online
hash.all.desc=ハッシュ値計算が行えます。 MD2 / MD5 / SHA-1 / SHA-256 / SHA-384 / SHA-512 / CRC32 / 他、様々なフォーマットに対応しています。
hash.all.tooltip=変換したい文字列を入力してください。 (例. "Hello, world!")

hash.md2.method=MD2
hash.md2.title=MD2ハッシュ値計算 Online
hash.md2.desc=MD2のハッシュ値計算が行えます。
hash.md2.tooltip=変換したい文字列を入力してください。 (例. "Hello, world!" => "8cca0e965edd0e223b744f9cedf8e141")
hash.md2.func.encHashMD2=MD2

hash.md5.method=MD5
hash.md5.title=MD5ハッシュ値計算 Online
hash.md5.desc=MD5のハッシュ値計算が行えます。
hash.md5.tooltip=変換したい文字列を入力してください。 (例. "Hello, world!" => "6cd3556deb0da54bca060b4c39479839")
hash.md5.func.encHashMD5=MD5

hash.sha1.method=SHA-1
hash.sha1.title=SHA1ハッシュ値計算 Online
hash.sha1.desc=SHA1のハッシュ値計算が行えます。
hash.sha1.tooltip=変換したい文字列を入力してください。 (例. "Hello, world!" => "943a702d06f34599aee1f8da8ef9f7296031d699")
hash.sha1.func.encHashSHA1=SHA-1

hash.sha256.method=SHA-256
hash.sha256.title=SHA256ハッシュ値計算 Online
hash.sha256.desc=SHA256のハッシュ値計算が行えます。
hash.sha256.tooltip=変換したい文字列を入力してください。 (例. "Hello, world!" => "315f5bdb76d078c43b8ac0064e4a0164612b1fce77c869345bfc94c75894edd3")
hash.sha256.func.encHashSHA256=SHA-256

hash.sha384.method=SHA-384
hash.sha384.title=SHA384ハッシュ値計算 Online
hash.sha384.desc=SHA384のハッシュ値計算が行えます。
hash.sha384.tooltip=変換したい文字列を入力してください。 (例. "Hello, world!" => "55bc556b0d2fe0fce582ba5fe07baafff035653638c7ac0d5494c2a64c0bea1cc57331c7c12a45cdbca7f4c34a089eeb")
hash.sha384.func.encHashSHA384=SHA-384

hash.sha512.method=SHA-512
hash.sha512.title=SHA512ハッシュ値計算 Online
hash.sha512.desc=SHA512のハッシュ値計算が行えます。
hash.sha512.tooltip=変換したい文字列を入力してください。 (例. "Hello, world!" => "c1527cd893c124773d811911970c8fe6e857d6df5dc9226bd8a160614c0cd963a4ddea2b94bb7d36021ef9d865d5cea294a82dd49a0bb269f51f6e7a57f79421")
hash.sha512.func.encHashSHA512=SHA-512

hash.crc32.method=CRC32
hash.crc32.title=CRC32ハッシュ値計算 Online
hash.crc32.desc=CRC32のハッシュ値計算が行えます。
hash.crc32.tooltip=変換したい文字列を入力してください。 (例. "Hello, world!" => "ebe6c6e6")
hash.crc32.func.encHashCRC32=CRC32


label.follow=入力フォームの位置固定
label.permanentLink=パーマネントリンク
label.permanentLink.buttonLabel=リンク
label.share.buttonLabel=シェア
label.openNewPage=新しいページとして開く
label.sendByEmail=Eメールで送信
label.shareOnTwitter=Twitterでシェア
label.shareOnFacebook=Facebookでシェア
label.load=読込
label.load.buttonLabel=読込
label.load.file=テキストファイルから読込
label.load.image=画像から読込 (OCR)
label.load.qrcode=QRコードから読込
label.load.message=読み込みました
label.load.errorMessage=読込に失敗しました。もう一度お試しください。
label.copyToClipboard=クリップボードにコピー
label.copyToClipboard.buttonLabel=コピー
label.copyToClipboard.message=コピーしました
label.copyToClipboard.errorMessage=コピー失敗
label.val.length=文字長
label.val.length.char=文字
label.val.length.chars=文字
label.val.length.byte=バイト
label.val.length.bytes=バイト

label.timeZone=タイムゾーン

label.encoded=エンコード結果
label.decoded=デコード結果

label.menu=メニュー
label.policy=ポリシー

label.ok=OK
label.close=閉じる
label.etc=その他


label.otherDencodeLink.all.all=その他の変換はこちら
label.otherDencodeLink.string.all=その他の文字列変換はこちら
label.otherDencodeLink.number.all=その他の数値変換はこちら
label.otherDencodeLink.date.all=その他の日時変換はこちら
label.otherDencodeLink.color.all=その他のカラー変換はこちら
label.otherDencodeLink.cipher.all=その他の暗号変換はこちら
label.otherDencodeLink.hash.all=その他のハッシュ値計算はこちら

label.otherDencodeLink.string.bin=2進数 文字列の変換はこちら
label.otherDencodeLink.string.hex=16進数 文字列の変換はこちら
label.otherDencodeLink.string.naming-convention=キャメル・スネーク・ケバブケースの一括変換はこちら
label.otherDencodeLink.number.bin=2進数 数値の変換はこちら
label.otherDencodeLink.number.hex=16進数 数値の変換はこちら
